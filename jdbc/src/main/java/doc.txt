
数据库连接池：
为数据库连接建立一个缓冲池。

1.建立连接池对象
2.初始化空闲连接数
3.对于一个数据库访问请求，直接从连接池中得到连接，
    如果数据库没有空闲连接，且连接数没有达到最大（即最大活跃连接数），创建一个新的数据库连接
4.执行数据库操作
5.释放连接，（将连接放回连接池）
6.程序退出时，释放数据库连接池对象（服务器停止、维护期间，释放数据库连接池对象，并释放所有连接）。





1.从连接池获取或创建可用连接
2.使用完毕之后，把连接返回给连接池
3.在系统关闭前，断开所有连接并释放连接占用的系统资源
4.能够处理无效连接，限制连接池中的连接总数不低于或者不超过某个限定值。


主流数据库连接池：
常用的主流开源数据库连接池有C3P0、DBCP、Tomcat Jdbc Pool、BoneCP、Druid等
C3p0: 开源的JDBC连接池，实现了数据源和JNDI绑定，支持JDBC3规范和JDBC2的标准扩展。目前使用它的开源项目有Hibernate、Spring等。单线程，性能较差，适用于小型系统，代码600KB左右。
DBCP (Database Connection Pool):由Apache开发的一个Java数据库连接池项目， Jakarta commons-pool对象池机制，Tomcat使用的连接池组件就是DBCP。单独使用dbcp需要3个包：common-dbcp.jar,common-pool.jar,common-collections.jar，预先将数据库连接放在内存中，应用程序需要建立数据库连接时直接到连接池中申请一个就行，用完再放回。单线程，并发量低，性能不好，适用于小型系统。
Tomcat Jdbc Pool：Tomcat在7.0以前都是使用common-dbcp做为连接池组件，但是dbcp是单线程，为保证线程安全会锁整个连接池，性能较差，dbcp有超过60个类，也相对复杂。Tomcat从7.0开始引入了新增连接池模块叫做Tomcat jdbc pool，基于Tomcat JULI，使用Tomcat日志框架，完全兼容dbcp，通过异步方式获取连接，支持高并发应用环境，超级简单核心文件只有8个，支持JMX，支持XA Connection。
