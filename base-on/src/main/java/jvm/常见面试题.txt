1.什么叫垃圾回收机制？
    垃圾回收是一种动态存储管理技术，它自动地释放不再被程序引用的对象，按照特定的垃圾收集算法来实现资源自动回收的功能。
    当一个对象不再被引用的时候，内存回收它占领的空间，以便空间被后来的新对象使用，以免造成内存泄露。
2.java的垃圾回收有什么特点？
    Java语言不允许程序员直接控制内存空间的使用。内存空间的分配和回收都是由JRE负责在后台自动进行的，
    尤其是无用内存空间的回收操作(garbagecollection,也称垃圾回收)，只能由运行环境提供的一个超级线程进行监测和控制。
3.垃圾回收器什么时候会运行？
    一般是在CPU空闲或空间不足时自动进行垃圾回收，而程序员无法精确控制垃圾回收的时机和顺序等。
4.垃圾回收器是怎样工作的？
    垃圾回收器如发现一个对象不能被任何活线程访问时，他将认为该对象符合删除条件，就将其加入回收队列，但不是立即销毁对象，
    何时销毁并释放内存是无法预知的。垃圾回收不能强制执行，然而java提供了一些方法（如：System.gc()方法），
    允许你请求JVM执行垃圾回收，而不是要求，虚拟机会尽其所能满足请求，但是不能保证JVM从内存中删除所有不用的对象。
5.如何检测垃圾？
    垃圾收集器有一个根对象集合，包含的元素：
        a.方法中局部变量的引用
        b.java操作栈中的对象引用
        c.常量池中的对象引用
        d.本地方法持有的对象的引用
        e.类的class对象
基于分代的垃圾收集算法：
    把对象分为年青代(Young)、年老代(Tenured)、持久代(Perm)，对不同生命周期的对象使用不同的算法。(基于对象生命周期分析)
    把对象按照寿命长短来分组，分为年轻代和年老代，新创建的对象被分在年轻代，如果对象经过几次回收后仍然存活，那么再把这个对象划分到年老代。
    年老代的收集频度没有那么频繁，这样就减少了每次垃圾收集时所需要的扫描的对象和数量，从而提高垃圾回收效率。
6.关于JVM内存管理我们需要注意的几个地方：
     a、程序中的无用对象、中间对象置为null，可加快内存回收。
     b、对象池技术如果生成的对象是可重用的对象，只是其中的属性不同时，可以考虑采用对象池减少对象的生成。
           如果对象池中有空闲的对象就取出使用，没有则生成新的对象，提高对象复用率。
   3、JVM调优通过配置JVM的参数来提高垃圾回收的速度，如果在没有出现内存泄露且上面两种办法都不能保证JVM内存回收时，可以考虑采用JVM调优            的方式来解决，不过一定要经过实体机的长期测试，因为不同的参数可能引起不同的效果。如-Xnoclassgc参数等。
